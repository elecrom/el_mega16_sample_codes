;/*****************************************************
;Chip type           : ATmega16
;Program type        : Application
;Clock frequency     : 16.000000 MHz
;Memory model        : Small
;External RAM size   : 0
;Data Stack size     : 256
;
;What does this program do ?
;###########################
;
;- It will monitor SW1 and SW2 on the kit
;- When SW1 is pressed, LEDs will be flashed in one
;  pattern.
;  When SW2 is pressed, LEDs will be flashed in another
;  pattern
;*****************************************************/
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;unsigned char A[8]={1,2,4,8,16,32,64,128};

	.DSEG
;unsigned char B[8]={2,8,32,128,1,4,16,64};
;unsigned char i;
;
;void main()
; 0000 001A {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001B DDRB=0xFF; 					//portb will be used for outputing data
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001C PORTB=0;   					//Cleaning portb
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001D 
; 0000 001E DDRC =0b00000000; 		//portc will be used for input
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001F PORTC=0b00001100;       //PC2,PC3 > Pulled up
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0020 
; 0000 0021 while(1)
;PCODE: $00000016 VOL: 0
; 0000 0022 {
; 0000 0023 	if(PINC.2==0) 			//if 1st button is pressed(grounded)
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0024 	{
; 0000 0025 		for(i=0;i<8;i++)
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0026 		{
; 0000 0027 			PORTB=A[i];
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0028 			delay_ms(500);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0029 		}
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002A 	}
; 0000 002B 	else if(PINC.3==0) 	//if 2nd button is pressed(grounded)
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002C 	{
; 0000 002D 		for(i=0;i<8;i++)
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002E 		{
; 0000 002F 			PORTB=B[i];
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0030 			delay_ms(500);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0031 		}
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0032 	}
; 0000 0033 
; 0000 0034 };
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0035 }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
