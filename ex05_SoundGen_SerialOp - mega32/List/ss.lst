
AVRASM ver. 2.1.17  F:\mega16_kitCD\sample code\ex05_SoundGen_SerialOp - mega32\List\ss.asm Thu Mar 19 23:19:04 2009

F:\mega16_kitCD\sample code\ex05_SoundGen_SerialOp - mega32\List\ss.asm(1026): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.03.4 Standard
                 ;(C) Copyright 1998-2008 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote char to int    : Yes
                 ;char is unsigned       : Yes
                 ;global const stored in FLASH  : No
                 ;8 bit enums            : Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	LDI  R30,0
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+@1)
                 	LDI  R31,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	LDI  R22,BYTE3(2*@0+@1)
                 	LDI  R23,BYTE4(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+@2)
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+@3)
                 	LDI  R@1,HIGH(@2+@3)
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+@3)
                 	LDI  R@1,HIGH(@2*2+@3)
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	LDS  R22,@0+@1+2
                 	LDS  R23,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+@2
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+@3
                 	LDS  R@1,@2+@3+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	LDS  R24,@0+@1+2
                 	LDS  R25,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	STS  @0+@1+2,R22
                 	STS  @0+@1+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+@1,R0
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+@1,R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+@1,R@2
                 	STS  @0+@1+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CLR  R0
                 	ST   Z+,R0
                 	ST   Z,R0
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CLR  R0
                 	ST   Z+,R0
                 	ST   Z+,R0
                 	ST   Z+,R0
                 	ST   Z,R0
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cnt=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 006e 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _saregama:
00002a 0105
00002b 0126
00002c 0137
00002d 015d      	.DB  0x5,0x1,0x26,0x1,0x37,0x1,0x5D,0x1
00002e 0188
00002f 01b8
000030 01ee
000031 020b      	.DB  0x88,0x1,0xB8,0x1,0xEE,0x1,0xB,0x2
000032 01ee
000033 01b8
000034 0188
000035 015d      	.DB  0xEE,0x1,0xB8,0x1,0x88,0x1,0x5D,0x1
000036 0137
000037 0126
000038 0105      	.DB  0x37,0x1,0x26,0x1,0x5,0x1
                 _twinkle:
000039 0105
00003a 0105
00003b 0188
00003c 0188      	.DB  0x5,0x1,0x5,0x1,0x88,0x1,0x88,0x1
00003d 01b8
00003e 01b8
00003f 0188
000040 015d      	.DB  0xB8,0x1,0xB8,0x1,0x88,0x1,0x5D,0x1
000041 015d
000042 0149
000043 0149
000044 0126      	.DB  0x5D,0x1,0x49,0x1,0x49,0x1,0x26,0x1
000045 0126
000046 0105
000047 0188
000048 0188      	.DB  0x26,0x1,0x5,0x1,0x88,0x1,0x88,0x1
000049 015d
00004a 015d
00004b 0149
00004c 0149      	.DB  0x5D,0x1,0x5D,0x1,0x49,0x1,0x49,0x1
00004d 0126
00004e 0188
00004f 0188
000050 015d      	.DB  0x26,0x1,0x88,0x1,0x88,0x1,0x5D,0x1
000051 015d
000052 0149
000053 0149
000054 0126      	.DB  0x5D,0x1,0x49,0x1,0x49,0x1,0x26,0x1
000055 0105
000056 0105
000057 0188
000058 0188      	.DB  0x5,0x1,0x5,0x1,0x88,0x1,0x88,0x1
000059 01b8
00005a 01b8
00005b 0188
00005c 015d      	.DB  0xB8,0x1,0xB8,0x1,0x88,0x1,0x5D,0x1
00005d 015d
00005e 0149
00005f 0149
000060 0126      	.DB  0x5D,0x1,0x49,0x1,0x49,0x1,0x26,0x1
000061 0126
000062 0105      	.DB  0x26,0x1,0x5,0x1
                 _tbl10_G100:
000063 2710
000064 03e8
000065 0064
000066 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000067 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000068 1000
000069 0100
00006a 0010
00006b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00006c 6425
00006d 0020      	.DB  0x25,0x64,0x20,0x0
                 __RESET:
00006e 94f8      	CLI
00006f 27ee      	CLR  R30
000070 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000071 e0f1      	LDI  R31,1
000072 bffb      	OUT  GICR,R31
000073 bfeb      	OUT  GICR,R30
000074 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000075 e1f8      	LDI  R31,0x18
000076 bdf1      	OUT  WDTCR,R31
000077 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000078 e08d      	LDI  R24,(14-2)+1
000079 e0a2      	LDI  R26,2
00007a 27bb      	CLR  R27
                 __CLEAR_REG:
00007b 93ed      	ST   X+,R30
00007c 958a      	DEC  R24
00007d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007e e080      	LDI  R24,LOW(0x800)
00007f e098      	LDI  R25,HIGH(0x800)
000080 e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
000081 93ed      	ST   X+,R30
000082 9701      	SBIW R24,1
000083 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;STACK POINTER INITIALIZATION
000084 e5ef      	LDI  R30,LOW(0x85F)
000085 bfed      	OUT  SPL,R30
000086 e0e8      	LDI  R30,HIGH(0x85F)
000087 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000088 e6c0      	LDI  R28,LOW(0x260)
000089 e0d2      	LDI  R29,HIGH(0x260)
                 
00008a 940c 009c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type           : ATmega16
                 ;Program type        : Application
                 ;Clock frequency     : 16.000000 MHz
                 ;Memory model        : Small
                 ;External SRAM size  : 0
                 ;Data Stack size     : 256
                 ;
                 ;What does this program do ?
                 ;###########################
                 ;
                 ;- Generates sound using the CTC mode of timer 1.
                 ;- By changing the OCR1A value, we can generate square
                 ;  waves of different frequencies.
                 ;- Output is available on PD5(OC1A) pin.
                 ;- Connect this pin to on speaker using external
                 ;  wire to listen the sound.
                 ;- Press SW1 or SW2 to start melody.
                 ;- Program all prints the frequency being generated on
                 ;  serial interface.
                 ;*****************************************************/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;
                 ;
                 ;//Frequency definitions :
                 ;
                 ;//Mandra
                 ;#define n_Sa    131
                 ;#define n_kRe   139
                 ;#define n_Re    147
                 ;#define n_Ga    156
                 ;#define n_kGa   165
                 ;#define n_Ma    175
                 ;#define n_tMa   185
                 ;#define n_Pa    196
                 ;#define n_kDh   208
                 ;#define n_Dh    220
                 ;#define n_kNi   233
                 ;#define n_Ni    247
                 ;
                 ;//Madhya
                 ;#define m_Sa    261
                 ;#define m_kRe   277
                 ;#define m_Re    294
                 ;#define m_Ga    311
                 ;#define m_kGa   329
                 ;#define m_Ma    349
                 ;#define m_tMa   370
                 ;#define m_Pa    392
                 ;#define m_kDh   415
                 ;#define m_Dh    440
                 ;#define m_kNi   466
                 ;#define m_Ni    494
                 ;
                 ;//Taar
                 ;#define t_Sa    523
                 ;#define t_kRe   554
                 ;#define t_Re    587
                 ;#define t_Ga    622
                 ;#define t_kGa   659
                 ;#define t_Ma    698
                 ;#define t_tMa   740
                 ;#define t_Pa    784
                 ;#define t_kDh   831
                 ;#define t_Dh    880
                 ;#define t_kNi   932
                 ;#define t_Ni    988
                 ;
                 ;//Frequency definitions : WESTERN
                 ;
                 ;//Mandra
                 ;#define c0      131
                 ;//#define n_kRe   139
                 ;#define d0      147
                 ;#define e0      156
                 ;//#define n_kGa   165
                 ;#define f0      175
                 ;//#define n_tMa   185
                 ;#define g0      196
                 ;//#define n_kDh   208
                 ;#define a0      220
                 ;//#define n_kNi   233
                 ;#define b0      247
                 ;
                 ;
                 ;//Madhya
                 ;#define c1      261
                 ;//#define m_kRe   277
                 ;#define d1      294
                 ;#define e1      329//             311
                 ;//#define m_kGa   329
                 ;#define f1      349
                 ;//#define m_tMa   370
                 ;#define g1      392
                 ;//#define m_kDh   415
                 ;#define a1      440
                 ;//#define m_kNi   466
                 ;#define b1      494
                 ;
                 ;//Taar
                 ;#define c2      523
                 ;//#define t_kRe   554
                 ;#define d2      587
                 ;#define e2      622
                 ;//#define t_kGa   659
                 ;#define f2      698
                 ;//#define t_tMa   740
                 ;#define g2      784
                 ;//#define t_kDh   831
                 ;#define a2      880
                 ;//#define t_kNi   932
                 ;#define b2      988
                 ;
                 ;
                 ;flash unsigned int mel_1[10]={m_Sa,m_Re,m_Ga,m_Ma,m_Pa,m_Dh,m_Ni,t_Sa};
                 ;flash unsigned int bhairavi[16]={m_Sa,m_kRe,m_kGa,m_Ma,m_Pa,m_kDh,m_kNi,t_Sa,
                 ;                            t_Sa,m_kNi,m_kDh,m_Pa,m_Ma,m_kGa,m_kRe,m_Sa};
                 ;
                 ;flash unsigned int saregama[15]={m_Sa,m_Re,m_Ga,m_Ma,m_Pa,m_Dh,m_Ni,t_Sa,
                 ;											m_Ni,m_Dh,m_Pa,m_Ma,m_Ga,m_Re,m_Sa};
                 ;
                 ;
                 ;flash unsigned int twinkle[42]={c1,c1,g1,g1,a1,a1,g1,f1,f1,e1,e1,d1,d1,c1,g1,g1,
                 ;                          f1,f1,e1,e1,d1,g1,g1,f1,f1,e1,e1,d1,c1,c1,g1,g1,
                 ;                          a1,a1,g1,f1,f1,e1,e1,d1,d1,c1};
                 ;
                 ;unsigned char cnt;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;// Declare your global variables here
                 ;/*__________________________________________________________________________________________*/
                 ;//-This function calculates value of OCR1A register to generate desired frequency, when
                 ;// timer1 is operating at 2MHz
                 ;unsigned int calc_OCR(unsigned int _freq)
                 ; 0000 0090 {
                 
                 	.CSEG
                 _calc_OCR:
                 ; 0000 0091    return (unsigned int)(2000000/((long int)_freq*2));
                 ;	_freq -> Y+0
00008c 81e8      	LD   R30,Y
00008d 81f9      	LDD  R31,Y+1
00008e 2766      	CLR  R22
00008f 2777      	CLR  R23
000090 940e 03a1 	CALL __LSLD1
                +
000092 e8a0     +LDI R26 , LOW ( 0x1E8480 )
000093 e8b4     +LDI R27 , HIGH ( 0x1E8480 )
000094 e18e     +LDI R24 , BYTE3 ( 0x1E8480 )
000095 e090     +LDI R25 , BYTE4 ( 0x1E8480 )
                 	__GETD2N 0x1E8480
000096 940e 03cb 	CALL __DIVD21
000098 2766      	CLR  R22
000099 2777      	CLR  R23
00009a 9622      	ADIW R28,2
00009b 9508      	RET
                 ; 0000 0092 }
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0096 {
                 _main:
                 ; 0000 0097 
                 ; 0000 0098 // Input/Output Ports initialization
                 ; 0000 0099 // Port A initialization
                 ; 0000 009A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 009B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 009C PORTA=0x00;
00009c e0e0      	LDI  R30,LOW(0)
00009d bbeb      	OUT  0x1B,R30
                 ; 0000 009D DDRA=0x00;
00009e bbea      	OUT  0x1A,R30
                 ; 0000 009E 
                 ; 0000 009F // Port B initialization
                 ; 0000 00A0 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 00A1 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
                 ; 0000 00A2 PORTB=0x00;
00009f bbe8      	OUT  0x18,R30
                 ; 0000 00A3 DDRB=0xFF;
0000a0 efef      	LDI  R30,LOW(255)
0000a1 bbe7      	OUT  0x17,R30
                 ; 0000 00A4 
                 ; 0000 00A5 // Port C initialization
                 ; 0000 00A6 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 00A7 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 00A8 PORTC=0b00001100;
0000a2 e0ec      	LDI  R30,LOW(12)
0000a3 bbe5      	OUT  0x15,R30
                 ; 0000 00A9 DDRC =0b00000000;
0000a4 e0e0      	LDI  R30,LOW(0)
0000a5 bbe4      	OUT  0x14,R30
                 ; 0000 00AA 
                 ; 0000 00AB // Port D initialization
                 ; 0000 00AC PORTD=0x00;
0000a6 bbe2      	OUT  0x12,R30
                 ; 0000 00AD DDRD= 0b00100000;
0000a7 e2e0      	LDI  R30,LOW(32)
0000a8 bbe1      	OUT  0x11,R30
                 ; 0000 00AE 
                 ; 0000 00AF // Timer/Counter 0 initialization
                 ; 0000 00B0 // Clock source: System Clock
                 ; 0000 00B1 // Clock value: Timer 0 Stopped
                 ; 0000 00B2 // Mode: Normal top=FFh
                 ; 0000 00B3 // OC0 output: Disconnected
                 ; 0000 00B4 TCCR0=0x00;
0000a9 e0e0      	LDI  R30,LOW(0)
0000aa bfe3      	OUT  0x33,R30
                 ; 0000 00B5 TCNT0=0x00;
0000ab bfe2      	OUT  0x32,R30
                 ; 0000 00B6 OCR0=0x00;
0000ac bfec      	OUT  0x3C,R30
                 ; 0000 00B7 
                 ; 0000 00B8 // Clock source: System Clock
                 ; 0000 00B9 // Clock value: 2000.000 kHz
                 ; 0000 00BA // Mode: CTC top=OCR1A
                 ; 0000 00BB // OC1A output: Toggle
                 ; 0000 00BC // OC1B output: Discon.
                 ; 0000 00BD // Noise Canceler: Off
                 ; 0000 00BE // Input Capture on Falling Edge
                 ; 0000 00BF // Timer 1 Overflow Interrupt: Off
                 ; 0000 00C0 // Input Capture Interrupt: Off
                 ; 0000 00C1 // Compare A Match Interrupt: Off
                 ; 0000 00C2 // Compare B Match Interrupt: Off
                 ; 0000 00C3 TCCR1A=0x40;
0000ad e4e0      	LDI  R30,LOW(64)
0000ae bdef      	OUT  0x2F,R30
                 ; 0000 00C4 TCCR1B=0x0A;
0000af e0ea      	LDI  R30,LOW(10)
0000b0 bdee      	OUT  0x2E,R30
                 ; 0000 00C5 TCNT1H=0x00;
0000b1 e0e0      	LDI  R30,LOW(0)
0000b2 bded      	OUT  0x2D,R30
                 ; 0000 00C6 TCNT1L=0x00;
0000b3 bdec      	OUT  0x2C,R30
                 ; 0000 00C7 ICR1H=0x00;
0000b4 bde7      	OUT  0x27,R30
                 ; 0000 00C8 ICR1L=0x00;
0000b5 bde6      	OUT  0x26,R30
                 ; 0000 00C9 OCR1AH=0x00;
0000b6 bdeb      	OUT  0x2B,R30
                 ; 0000 00CA OCR1AL=0x00;
0000b7 bdea      	OUT  0x2A,R30
                 ; 0000 00CB OCR1BH=0x00;
0000b8 bde9      	OUT  0x29,R30
                 ; 0000 00CC OCR1BL=0x00;
0000b9 bde8      	OUT  0x28,R30
                 ; 0000 00CD 
                 ; 0000 00CE 
                 ; 0000 00CF // Timer/Counter 2 initialization
                 ; 0000 00D0 // Clock source: System Clock
                 ; 0000 00D1 // Clock value: Timer 2 Stopped
                 ; 0000 00D2 // Mode: Normal top=FFh
                 ; 0000 00D3 // OC2 output: Disconnected
                 ; 0000 00D4 ASSR=0x00;
0000ba bde2      	OUT  0x22,R30
                 ; 0000 00D5 TCCR2=0x00;
0000bb bde5      	OUT  0x25,R30
                 ; 0000 00D6 TCNT2=0x00;
0000bc bde4      	OUT  0x24,R30
                 ; 0000 00D7 OCR2=0x00;
0000bd bde3      	OUT  0x23,R30
                 ; 0000 00D8 
                 ; 0000 00D9 // External Interrupt(s) initialization
                 ; 0000 00DA // INT0: Off
                 ; 0000 00DB // INT1: Off
                 ; 0000 00DC // INT2: Off
                 ; 0000 00DD MCUCR=0x00;
0000be bfe5      	OUT  0x35,R30
                 ; 0000 00DE MCUCSR=0x00;
0000bf bfe4      	OUT  0x34,R30
                 ; 0000 00DF 
                 ; 0000 00E0 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00E1 TIMSK=0x00;
0000c0 bfe9      	OUT  0x39,R30
                 ; 0000 00E2 
                 ; 0000 00E3 // USART initialization
                 ; 0000 00E4 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 00E5 // USART Receiver: Off
                 ; 0000 00E6 // USART Transmitter: On
                 ; 0000 00E7 // USART Mode: Asynchronous
                 ; 0000 00E8 // USART Baud Rate: 56000
                 ; 0000 00E9 UCSRA=0x00;
0000c1 b9eb      	OUT  0xB,R30
                 ; 0000 00EA UCSRB=0x08;
0000c2 e0e8      	LDI  R30,LOW(8)
0000c3 b9ea      	OUT  0xA,R30
                 ; 0000 00EB UCSRC=0x86;
0000c4 e8e6      	LDI  R30,LOW(134)
0000c5 bde0      	OUT  0x20,R30
                 ; 0000 00EC UBRRH=0x00;
0000c6 e0e0      	LDI  R30,LOW(0)
0000c7 bde0      	OUT  0x20,R30
                 ; 0000 00ED UBRRL=0x11;
0000c8 e1e1      	LDI  R30,LOW(17)
0000c9 b9e9      	OUT  0x9,R30
                 ; 0000 00EE 
                 ; 0000 00EF // Analog Comparator initialization
                 ; 0000 00F0 // Analog Comparator: Off
                 ; 0000 00F1 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 00F2 ACSR=0x80;
0000ca e8e0      	LDI  R30,LOW(128)
0000cb b9e8      	OUT  0x8,R30
                 ; 0000 00F3 SFIOR=0x00;
0000cc e0e0      	LDI  R30,LOW(0)
0000cd bfe0      	OUT  0x30,R30
                 ; 0000 00F4 
                 ; 0000 00F5 delay_ms(200);
0000ce ece8      	LDI  R30,LOW(200)
0000cf e0f0      	LDI  R31,HIGH(200)
0000d0 940e 031c 	CALL SUBOPT_0x0
                 ; 0000 00F6 
                 ; 0000 00F7 while (1)
                 _0x3:
                 ; 0000 00F8    {
                 ; 0000 00F9       // Place your code here
                 ; 0000 00FA 		PORTD.5=0;
0000d2 9895      	CBI  0x12,5
                 ; 0000 00FB 		OCR1A=0;
0000d3 940e 0320 	CALL SUBOPT_0x1
                 ; 0000 00FC 
                 ; 0000 00FD 		if(PINC.2==0)
0000d5 999a      	SBIC 0x13,2
0000d6 c012      	RJMP _0x8
                 ; 0000 00FE 		{
                 ; 0000 00FF 			for(cnt=0;cnt<42;cnt++)
0000d7 2455      	CLR  R5
                 _0xA:
0000d8 e2ea      	LDI  R30,LOW(42)
0000d9 165e      	CP   R5,R30
0000da f468      	BRSH _0xB
                 ; 0000 0100 			{
                 ; 0000 0101 				OCR1A = calc_OCR(twinkle[cnt]);
0000db 2de5      	MOV  R30,R5
0000dc e7a2      	LDI  R26,LOW(_twinkle*2)
0000dd e0b0      	LDI  R27,HIGH(_twinkle*2)
0000de 940e 0325 	CALL SUBOPT_0x2
                 ; 0000 0102 				printf("%d ",OCR1A);
                 ; 0000 0103 				delay_ms(300);
                 ; 0000 0104 				OCR1A=0;
0000e0 940e 0320 	CALL SUBOPT_0x1
                 ; 0000 0105 				delay_ms(100);
0000e2 e6e4      	LDI  R30,LOW(100)
0000e3 e0f0      	LDI  R31,HIGH(100)
0000e4 940e 031c 	CALL SUBOPT_0x0
                 ; 0000 0106 
                 ; 0000 0107 			}
0000e6 9453      	INC  R5
0000e7 cff0      	RJMP _0xA
                 _0xB:
                 ; 0000 0108 		}
                 ; 0000 0109 		else if(PINC.3==0)
0000e8 c013      	RJMP _0xC
                 _0x8:
0000e9 999b      	SBIC 0x13,3
0000ea c011      	RJMP _0xD
                 ; 0000 010A 		{
                 ; 0000 010B 			for(cnt=0;cnt<15;cnt++)
0000eb 2455      	CLR  R5
                 _0xF:
0000ec e0ef      	LDI  R30,LOW(15)
0000ed 165e      	CP   R5,R30
0000ee f468      	BRSH _0x10
                 ; 0000 010C 			{
                 ; 0000 010D 				OCR1A = calc_OCR(saregama[cnt]);
0000ef 2de5      	MOV  R30,R5
0000f0 e5a4      	LDI  R26,LOW(_saregama*2)
0000f1 e0b0      	LDI  R27,HIGH(_saregama*2)
0000f2 940e 0325 	CALL SUBOPT_0x2
                 ; 0000 010E 				printf("%d ",OCR1A);
                 ; 0000 010F 				delay_ms(300);
                 ; 0000 0110 				OCR1A=0;
0000f4 940e 0320 	CALL SUBOPT_0x1
                 ; 0000 0111 				delay_ms(100);
0000f6 e6e4      	LDI  R30,LOW(100)
0000f7 e0f0      	LDI  R31,HIGH(100)
0000f8 940e 031c 	CALL SUBOPT_0x0
                 ; 0000 0112 
                 ; 0000 0113 			}
0000fa 9453      	INC  R5
0000fb cff0      	RJMP _0xF
                 _0x10:
                 ; 0000 0114 
                 ; 0000 0115 		}
                 ; 0000 0116 
                 ; 0000 0117 	};
                 _0xD:
                 _0xC:
0000fc cfd5      	RJMP _0x3
                 ; 0000 0118 }
                 _0x11:
0000fd cfff      	RJMP _0x11
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
0000fe 9b5d           sbis usr,udre
0000ff cffe           rjmp _putchar
000100 81e8           ld   r30,y
000101 b9ec           out  udr,r30
000102 9621      	ADIW R28,1
000103 9508      	RET
                 __put_G100:
000104 931a      	ST   -Y,R17
000105 930a      	ST   -Y,R16
000106 81ac      	LDD  R26,Y+4
000107 81bd      	LDD  R27,Y+4+1
000108 940e 03e3 	CALL __GETW1P
00010a 9730      	SBIW R30,0
00010b f0d9      	BREQ _0x2000010
00010c 81aa      	LDD  R26,Y+2
00010d 81bb      	LDD  R27,Y+2+1
00010e 940e 03e3 	CALL __GETW1P
000110 018f      	MOVW R16,R30
000111 9730      	SBIW R30,0
000112 f049      	BREQ _0x2000012
                +
000113 3002     +CPI R16 , LOW ( 2 )
000114 e0e0     +LDI R30 , HIGH ( 2 )
000115 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000116 f078      	BRLO _0x2000013
000117 01f8      	MOVW R30,R16
000118 9731      	SBIW R30,1
000119 018f      	MOVW R16,R30
00011a 93ed      	ST   X+,R30
00011b 93fc      	ST   X,R31
                 _0x2000012:
00011c 81ac      	LDD  R26,Y+4
00011d 81bd      	LDD  R27,Y+4+1
00011e 91ed      	LD   R30,X+
00011f 91fd      	LD   R31,X+
000120 9631      	ADIW R30,1
000121 93fe      	ST   -X,R31
000122 93ee      	ST   -X,R30
000123 9731      	SBIW R30,1
000124 81ae      	LDD  R26,Y+6
000125 83a0      	STD  Z+0,R26
                 _0x2000013:
000126 c003      	RJMP _0x2000014
                 _0x2000010:
000127 81ee      	LDD  R30,Y+6
000128 93ea      	ST   -Y,R30
000129 dfd4      	RCALL _putchar
                 _0x2000014:
00012a 8119      	LDD  R17,Y+1
00012b 8108      	LDD  R16,Y+0
00012c 9627      	ADIW R28,7
00012d 9508      	RET
                 __print_G100:
00012e 9726      	SBIW R28,6
00012f 940e 03f7 	CALL __SAVELOCR6
000131 e010      	LDI  R17,0
                 _0x2000015:
000132 89ea      	LDD  R30,Y+18
000133 89fb      	LDD  R31,Y+18+1
000134 9631      	ADIW R30,1
000135 8bea      	STD  Y+18,R30
000136 8bfb      	STD  Y+18+1,R31
000137 9731      	SBIW R30,1
000138 91e4      	LPM  R30,Z
000139 2f2e      	MOV  R18,R30
00013a 30e0      	CPI  R30,0
00013b f411      	BRNE PC+3
00013c 940c 02df 	JMP _0x2000017
00013e 2fe1      	MOV  R30,R17
00013f e0f0      	LDI  R31,0
000140 9730      	SBIW R30,0
000141 f439      	BRNE _0x200001B
000142 3225      	CPI  R18,37
000143 f411      	BRNE _0x200001C
000144 e011      	LDI  R17,LOW(1)
000145 c002      	RJMP _0x200001D
                 _0x200001C:
000146 940e 0343 	CALL SUBOPT_0x3
                 _0x200001D:
000148 c195      	RJMP _0x200001A
                 _0x200001B:
000149 30e1      	CPI  R30,LOW(0x1)
00014a e0a0      	LDI  R26,HIGH(0x1)
00014b 07fa      	CPC  R31,R26
00014c f4a9      	BRNE _0x200001E
00014d 3225      	CPI  R18,37
00014e f419      	BRNE _0x200001F
00014f 940e 0343 	CALL SUBOPT_0x3
000151 c18b      	RJMP _0x20000BC
                 _0x200001F:
000152 e012      	LDI  R17,LOW(2)
000153 e040      	LDI  R20,LOW(0)
000154 e000      	LDI  R16,LOW(0)
000155 322d      	CPI  R18,45
000156 f411      	BRNE _0x2000020
000157 e001      	LDI  R16,LOW(1)
000158 c185      	RJMP _0x200001A
                 _0x2000020:
000159 322b      	CPI  R18,43
00015a f411      	BRNE _0x2000021
00015b e24b      	LDI  R20,LOW(43)
00015c c181      	RJMP _0x200001A
                 _0x2000021:
00015d 3220      	CPI  R18,32
00015e f411      	BRNE _0x2000022
00015f e240      	LDI  R20,LOW(32)
000160 c17d      	RJMP _0x200001A
                 _0x2000022:
000161 c004      	RJMP _0x2000023
                 _0x200001E:
000162 30e2      	CPI  R30,LOW(0x2)
000163 e0a0      	LDI  R26,HIGH(0x2)
000164 07fa      	CPC  R31,R26
000165 f461      	BRNE _0x2000024
                 _0x2000023:
000166 e050      	LDI  R21,LOW(0)
000167 e013      	LDI  R17,LOW(3)
000168 3320      	CPI  R18,48
000169 f439      	BRNE _0x2000025
00016a 940e 034e 	CALL SUBOPT_0x4
00016c e8e0      	LDI  R30,LOW(128)
00016d e0f0      	LDI  R31,HIGH(128)
00016e 2bea      	OR   R30,R26
00016f 2f0e      	MOV  R16,R30
000170 c16d      	RJMP _0x200001A
                 _0x2000025:
000171 c006      	RJMP _0x2000026
                 _0x2000024:
000172 30e3      	CPI  R30,LOW(0x3)
000173 e0a0      	LDI  R26,HIGH(0x3)
000174 07fa      	CPC  R31,R26
000175 f011      	BREQ PC+3
000176 940c 02de 	JMP _0x200001A
                 _0x2000026:
000178 3320      	CPI  R18,48
000179 f010      	BRLO _0x2000029
00017a 332a      	CPI  R18,58
00017b f008      	BRLO _0x200002A
                 _0x2000029:
00017c c015      	RJMP _0x2000028
                 _0x200002A:
00017d 2fa5      	MOV  R26,R21
00017e e0b0      	LDI  R27,0
00017f e0ea      	LDI  R30,LOW(10)
000180 e0f0      	LDI  R31,HIGH(10)
000181 02ea      	MULS R30,R26
000182 01f0      	MOVW R30,R0
000183 2f5e      	MOV  R21,R30
000184 2f65      	MOV  R22,R21
000185 2777      	CLR  R23
000186 2fa2      	MOV  R26,R18
000187 e0b0      	LDI  R27,0
000188 e3e0      	LDI  R30,LOW(48)
000189 e0f0      	LDI  R31,HIGH(48)
00018a 940e 03f0 	CALL __SWAPW12
00018c 1bea      	SUB  R30,R26
00018d 0bfb      	SBC  R31,R27
00018e 01db      	MOVW R26,R22
00018f 0fea      	ADD  R30,R26
000190 2f5e      	MOV  R21,R30
000191 c14c      	RJMP _0x200001A
                 _0x2000028:
000192 940e 0351 	CALL SUBOPT_0x5
000194 36e3      	CPI  R30,LOW(0x63)
000195 e0a0      	LDI  R26,HIGH(0x63)
000196 07fa      	CPC  R31,R26
000197 f449      	BRNE _0x200002E
000198 940e 0354 	CALL SUBOPT_0x6
00019a 89e8      	LDD  R30,Y+16
00019b 89f9      	LDD  R31,Y+16+1
00019c 81a4      	LDD  R26,Z+4
00019d 93aa      	ST   -Y,R26
00019e 940e 035a 	CALL SUBOPT_0x7
0001a0 c13c      	RJMP _0x200002F
                 _0x200002E:
0001a1 37e3      	CPI  R30,LOW(0x73)
0001a2 e0a0      	LDI  R26,HIGH(0x73)
0001a3 07fa      	CPC  R31,R26
0001a4 f441      	BRNE _0x2000031
0001a5 940e 0354 	CALL SUBOPT_0x6
0001a7 940e 0364 	CALL SUBOPT_0x8
0001a9 940e 0307 	CALL _strlen
0001ab 2f1e      	MOV  R17,R30
0001ac c011      	RJMP _0x2000032
                 _0x2000031:
0001ad 37e0      	CPI  R30,LOW(0x70)
0001ae e0a0      	LDI  R26,HIGH(0x70)
0001af 07fa      	CPC  R31,R26
0001b0 f4d9      	BRNE _0x2000034
0001b1 940e 0354 	CALL SUBOPT_0x6
0001b3 940e 0364 	CALL SUBOPT_0x8
0001b5 940e 0311 	CALL _strlenf
0001b7 2f1e      	MOV  R17,R30
0001b8 940e 034e 	CALL SUBOPT_0x4
0001ba e0e8      	LDI  R30,LOW(8)
0001bb e0f0      	LDI  R31,HIGH(8)
0001bc 2bea      	OR   R30,R26
0001bd 2f0e      	MOV  R16,R30
                 _0x2000032:
0001be 940e 034e 	CALL SUBOPT_0x4
0001c0 e0e2      	LDI  R30,LOW(2)
0001c1 e0f0      	LDI  R31,HIGH(2)
0001c2 2bea      	OR   R30,R26
0001c3 2f0e      	MOV  R16,R30
0001c4 940e 034e 	CALL SUBOPT_0x4
0001c6 e7ef      	LDI  R30,LOW(65407)
0001c7 efff      	LDI  R31,HIGH(65407)
0001c8 23ea      	AND  R30,R26
0001c9 2f0e      	MOV  R16,R30
0001ca e030      	LDI  R19,LOW(0)
0001cb c04f      	RJMP _0x2000035
                 _0x2000034:
0001cc 36e4      	CPI  R30,LOW(0x64)
0001cd e0a0      	LDI  R26,HIGH(0x64)
0001ce 07fa      	CPC  R31,R26
0001cf f021      	BREQ _0x2000038
0001d0 36e9      	CPI  R30,LOW(0x69)
0001d1 e0a0      	LDI  R26,HIGH(0x69)
0001d2 07fa      	CPC  R31,R26
0001d3 f439      	BRNE _0x2000039
                 _0x2000038:
0001d4 940e 034e 	CALL SUBOPT_0x4
0001d6 e0e4      	LDI  R30,LOW(4)
0001d7 e0f0      	LDI  R31,HIGH(4)
0001d8 2bea      	OR   R30,R26
0001d9 2f0e      	MOV  R16,R30
0001da c004      	RJMP _0x200003A
                 _0x2000039:
0001db 37e5      	CPI  R30,LOW(0x75)
0001dc e0a0      	LDI  R26,HIGH(0x75)
0001dd 07fa      	CPC  R31,R26
0001de f431      	BRNE _0x200003B
                 _0x200003A:
0001df ece6      	LDI  R30,LOW(_tbl10_G100*2)
0001e0 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0001e1 83ee      	STD  Y+6,R30
0001e2 83ff      	STD  Y+6+1,R31
0001e3 e015      	LDI  R17,LOW(5)
0001e4 c016      	RJMP _0x200003C
                 _0x200003B:
0001e5 35e8      	CPI  R30,LOW(0x58)
0001e6 e0a0      	LDI  R26,HIGH(0x58)
0001e7 07fa      	CPC  R31,R26
0001e8 f439      	BRNE _0x200003E
0001e9 940e 034e 	CALL SUBOPT_0x4
0001eb e0e8      	LDI  R30,LOW(8)
0001ec e0f0      	LDI  R31,HIGH(8)
0001ed 2bea      	OR   R30,R26
0001ee 2f0e      	MOV  R16,R30
0001ef c006      	RJMP _0x200003F
                 _0x200003E:
0001f0 37e8      	CPI  R30,LOW(0x78)
0001f1 e0a0      	LDI  R26,HIGH(0x78)
0001f2 07fa      	CPC  R31,R26
0001f3 f011      	BREQ PC+3
0001f4 940c 02dd 	JMP _0x2000070
                 _0x200003F:
0001f6 ede0      	LDI  R30,LOW(_tbl16_G100*2)
0001f7 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0001f8 83ee      	STD  Y+6,R30
0001f9 83ff      	STD  Y+6+1,R31
0001fa e014      	LDI  R17,LOW(4)
                 _0x200003C:
0001fb 940e 034e 	CALL SUBOPT_0x4
0001fd 940e 036e 	CALL SUBOPT_0x9
0001ff f0b9      	BREQ _0x2000041
000200 940e 0354 	CALL SUBOPT_0x6
000202 940e 0374 	CALL SUBOPT_0xA
000204 85ab      	LDD  R26,Y+11
000205 23aa      	TST  R26
000206 f43a      	BRPL _0x2000042
000207 85ea      	LDD  R30,Y+10
000208 85fb      	LDD  R31,Y+10+1
000209 940e 0395 	CALL __ANEGW1
00020b 87ea      	STD  Y+10,R30
00020c 87fb      	STD  Y+10+1,R31
00020d e24d      	LDI  R20,LOW(45)
                 _0x2000042:
00020e 3040      	CPI  R20,0
00020f f011      	BREQ _0x2000043
000210 5f1f      	SUBI R17,-LOW(1)
000211 c004      	RJMP _0x2000044
                 _0x2000043:
000212 940e 034e 	CALL SUBOPT_0x4
000214 940e 037c 	CALL SUBOPT_0xB
                 _0x2000044:
000216 c004      	RJMP _0x2000045
                 _0x2000041:
000217 940e 0354 	CALL SUBOPT_0x6
000219 940e 0374 	CALL SUBOPT_0xA
                 _0x2000045:
                 _0x2000035:
00021b 940e 0381 	CALL SUBOPT_0xC
00021d f4e9      	BRNE _0x2000046
                 _0x2000047:
00021e 1715      	CP   R17,R21
00021f f4d8      	BRSH _0x2000049
000220 940e 034e 	CALL SUBOPT_0x4
000222 e8e0      	LDI  R30,LOW(128)
000223 e0f0      	LDI  R31,HIGH(128)
000224 23ea      	AND  R30,R26
000225 23fb      	AND  R31,R27
000226 9730      	SBIW R30,0
000227 f071      	BREQ _0x200004A
000228 940e 034e 	CALL SUBOPT_0x4
00022a 940e 036e 	CALL SUBOPT_0x9
00022c f039      	BREQ _0x200004B
00022d 940e 034e 	CALL SUBOPT_0x4
00022f 940e 037c 	CALL SUBOPT_0xB
000231 2f24      	MOV  R18,R20
000232 5011      	SUBI R17,LOW(1)
000233 c001      	RJMP _0x200004C
                 _0x200004B:
000234 e320      	LDI  R18,LOW(48)
                 _0x200004C:
000235 c001      	RJMP _0x200004D
                 _0x200004A:
000236 e220      	LDI  R18,LOW(32)
                 _0x200004D:
000237 940e 0343 	CALL SUBOPT_0x3
000239 5051      	SUBI R21,LOW(1)
00023a cfe3      	RJMP _0x2000047
                 _0x2000049:
                 _0x2000046:
00023b 2f31      	MOV  R19,R17
00023c 940e 034e 	CALL SUBOPT_0x4
00023e e0e2      	LDI  R30,LOW(2)
00023f e0f0      	LDI  R31,HIGH(2)
000240 23ea      	AND  R30,R26
000241 23fb      	AND  R31,R27
000242 9730      	SBIW R30,0
000243 f101      	BREQ _0x200004E
                 _0x200004F:
000244 3030      	CPI  R19,0
000245 f0e9      	BREQ _0x2000051
000246 940e 034e 	CALL SUBOPT_0x4
000248 e0e8      	LDI  R30,LOW(8)
000249 e0f0      	LDI  R31,HIGH(8)
00024a 23ea      	AND  R30,R26
00024b 23fb      	AND  R31,R27
00024c 9730      	SBIW R30,0
00024d f041      	BREQ _0x2000052
00024e 81ee      	LDD  R30,Y+6
00024f 81ff      	LDD  R31,Y+6+1
000250 9631      	ADIW R30,1
000251 83ee      	STD  Y+6,R30
000252 83ff      	STD  Y+6+1,R31
000253 9731      	SBIW R30,1
000254 91e4      	LPM  R30,Z
000255 c005      	RJMP _0x20000BD
                 _0x2000052:
000256 81ae      	LDD  R26,Y+6
000257 81bf      	LDD  R27,Y+6+1
000258 91ed      	LD   R30,X+
000259 83ae      	STD  Y+6,R26
00025a 83bf      	STD  Y+6+1,R27
                 _0x20000BD:
00025b 93ea      	ST   -Y,R30
00025c 940e 035a 	CALL SUBOPT_0x7
00025e 3050      	CPI  R21,0
00025f f009      	BREQ _0x2000054
000260 5051      	SUBI R21,LOW(1)
                 _0x2000054:
000261 5031      	SUBI R19,LOW(1)
000262 cfe1      	RJMP _0x200004F
                 _0x2000051:
000263 c06e      	RJMP _0x2000055
                 _0x200004E:
                 _0x2000057:
000264 e320      	LDI  R18,LOW(48)
000265 81ee      	LDD  R30,Y+6
000266 81ff      	LDD  R31,Y+6+1
000267 940e 03e7 	CALL __GETW1PF
000269 87e8      	STD  Y+8,R30
00026a 87f9      	STD  Y+8+1,R31
00026b 81ee      	LDD  R30,Y+6
00026c 81ff      	LDD  R31,Y+6+1
00026d 9632      	ADIW R30,2
00026e 83ee      	STD  Y+6,R30
00026f 83ff      	STD  Y+6+1,R31
                 _0x2000059:
000270 85e8      	LDD  R30,Y+8
000271 85f9      	LDD  R31,Y+8+1
000272 85aa      	LDD  R26,Y+10
000273 85bb      	LDD  R27,Y+10+1
000274 17ae      	CP   R26,R30
000275 07bf      	CPC  R27,R31
000276 f050      	BRLO _0x200005B
000277 5f2f      	SUBI R18,-LOW(1)
000278 85a8      	LDD  R26,Y+8
000279 85b9      	LDD  R27,Y+8+1
00027a 85ea      	LDD  R30,Y+10
00027b 85fb      	LDD  R31,Y+10+1
00027c 1bea      	SUB  R30,R26
00027d 0bfb      	SBC  R31,R27
00027e 87ea      	STD  Y+10,R30
00027f 87fb      	STD  Y+10+1,R31
000280 cfef      	RJMP _0x2000059
                 _0x200005B:
000281 332a      	CPI  R18,58
000282 f080      	BRLO _0x200005C
000283 940e 034e 	CALL SUBOPT_0x4
000285 e0e8      	LDI  R30,LOW(8)
000286 e0f0      	LDI  R31,HIGH(8)
000287 23ea      	AND  R30,R26
000288 23fb      	AND  R31,R27
000289 9730      	SBIW R30,0
00028a f021      	BREQ _0x200005D
00028b 940e 0351 	CALL SUBOPT_0x5
00028d 9637      	ADIW R30,7
00028e c003      	RJMP _0x20000BE
                 _0x200005D:
00028f 940e 0351 	CALL SUBOPT_0x5
000291 96b7      	ADIW R30,39
                 _0x20000BE:
000292 2f2e      	MOV  R18,R30
                 _0x200005C:
000293 940e 034e 	CALL SUBOPT_0x4
000295 e1e0      	LDI  R30,LOW(16)
000296 e0f0      	LDI  R31,HIGH(16)
000297 23ea      	AND  R30,R26
000298 23fb      	AND  R31,R27
000299 9730      	SBIW R30,0
00029a f561      	BRNE _0x2000060
00029b 3321      	CPI  R18,49
00029c f420      	BRSH _0x2000062
00029d 85a8      	LDD  R26,Y+8
00029e 85b9      	LDD  R27,Y+8+1
00029f 9711      	SBIW R26,1
0002a0 f409      	BRNE _0x2000061
                 _0x2000062:
0002a1 c010      	RJMP _0x20000BF
                 _0x2000061:
0002a2 1753      	CP   R21,R19
0002a3 f018      	BRLO _0x2000066
0002a4 940e 0381 	CALL SUBOPT_0xC
0002a6 f009      	BREQ _0x2000067
                 _0x2000066:
0002a7 c024      	RJMP _0x2000065
                 _0x2000067:
0002a8 e220      	LDI  R18,LOW(32)
0002a9 940e 034e 	CALL SUBOPT_0x4
0002ab e8e0      	LDI  R30,LOW(128)
0002ac e0f0      	LDI  R31,HIGH(128)
0002ad 23ea      	AND  R30,R26
0002ae 23fb      	AND  R31,R27
0002af 9730      	SBIW R30,0
0002b0 f0b1      	BREQ _0x2000068
0002b1 e320      	LDI  R18,LOW(48)
                 _0x20000BF:
0002b2 2fa0      	MOV  R26,R16
0002b3 e0b0      	LDI  R27,0
0002b4 e1e0      	LDI  R30,LOW(16)
0002b5 e0f0      	LDI  R31,HIGH(16)
0002b6 2bea      	OR   R30,R26
0002b7 2f0e      	MOV  R16,R30
0002b8 940e 034e 	CALL SUBOPT_0x4
0002ba 940e 036e 	CALL SUBOPT_0x9
0002bc f051      	BREQ _0x2000069
0002bd 940e 034e 	CALL SUBOPT_0x4
0002bf 940e 037c 	CALL SUBOPT_0xB
0002c1 934a      	ST   -Y,R20
0002c2 940e 035a 	CALL SUBOPT_0x7
0002c4 3050      	CPI  R21,0
0002c5 f009      	BREQ _0x200006A
0002c6 5051      	SUBI R21,LOW(1)
                 _0x200006A:
                 _0x2000069:
                 _0x2000068:
                 _0x2000060:
0002c7 940e 0343 	CALL SUBOPT_0x3
0002c9 3050      	CPI  R21,0
0002ca f009      	BREQ _0x200006B
0002cb 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x2000065:
0002cc 5031      	SUBI R19,LOW(1)
0002cd 85a8      	LDD  R26,Y+8
0002ce 85b9      	LDD  R27,Y+8+1
0002cf 9712      	SBIW R26,2
0002d0 f008      	BRLO _0x2000058
0002d1 cf92      	RJMP _0x2000057
                 _0x2000058:
                 _0x2000055:
0002d2 940e 0381 	CALL SUBOPT_0xC
0002d4 f041      	BREQ _0x200006C
                 _0x200006D:
0002d5 3050      	CPI  R21,0
0002d6 f031      	BREQ _0x200006F
0002d7 5051      	SUBI R21,LOW(1)
0002d8 e2e0      	LDI  R30,LOW(32)
0002d9 93ea      	ST   -Y,R30
0002da 940e 035a 	CALL SUBOPT_0x7
0002dc cff8      	RJMP _0x200006D
                 _0x200006F:
                 _0x200006C:
                 _0x2000070:
                 _0x200002F:
                 _0x20000BC:
0002dd e010      	LDI  R17,LOW(0)
                 _0x200001A:
0002de ce53      	RJMP _0x2000015
                 _0x2000017:
0002df 940e 03fe 	CALL __LOADLOCR6
0002e1 9664      	ADIW R28,20
0002e2 9508      	RET
                 _printf:
0002e3 92ff      	PUSH R15
0002e4 2ef8      	MOV  R15,R24
0002e5 9722      	SBIW R28,2
0002e6 931a      	ST   -Y,R17
0002e7 930a      	ST   -Y,R16
0002e8 01de      	MOVW R26,R28
0002e9 940e 0391 	CALL __ADDW2R15
0002eb 018d      	MOVW R16,R26
0002ec e0e0      	LDI  R30,0
0002ed 83ea      	STD  Y+2,R30
0002ee 83eb      	STD  Y+2+1,R30
0002ef 01de      	MOVW R26,R28
0002f0 9614      	ADIW R26,4
0002f1 940e 0391 	CALL __ADDW2R15
0002f3 940e 03e3 	CALL __GETW1P
0002f5 93fa      	ST   -Y,R31
0002f6 93ea      	ST   -Y,R30
0002f7 931a      	ST   -Y,R17
0002f8 930a      	ST   -Y,R16
0002f9 01fe      	MOVW R30,R28
0002fa 9636      	ADIW R30,6
0002fb 93fa      	ST   -Y,R31
0002fc 93ea      	ST   -Y,R30
0002fd e0e0      	LDI  R30,LOW(0)
0002fe e0f0      	LDI  R31,HIGH(0)
0002ff 93fa      	ST   -Y,R31
000300 93ea      	ST   -Y,R30
000301 de2c      	RCALL __print_G100
000302 8119      	LDD  R17,Y+1
000303 8108      	LDD  R16,Y+0
000304 9624      	ADIW R28,4
000305 90ff      	POP  R15
000306 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
000307 91a9          ld   r26,y+
000308 91b9          ld   r27,y+
000309 27ee          clr  r30
00030a 27ff          clr  r31
                 strlen0:
00030b 916d          ld   r22,x+
00030c 2366          tst  r22
00030d f011          breq strlen1
00030e 9631          adiw r30,1
00030f cffb          rjmp strlen0
                 strlen1:
000310 9508          ret
                 _strlenf:
000311 27aa          clr  r26
000312 27bb          clr  r27
000313 91e9          ld   r30,y+
000314 91f9          ld   r31,y+
                 strlenf0:
000315 9005          lpm  r0,z+
000316 2000          tst  r0
000317 f011          breq strlenf1
000318 9611          adiw r26,1
000319 cffb          rjmp strlenf0
                 strlenf1:
00031a 01fd          movw r30,r26
00031b 9508          ret
                 
                 	.DSEG
                 _p_S1020024:
000260           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
00031c 93fa      	ST   -Y,R31
00031d 93ea      	ST   -Y,R30
00031e 940c 0385 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000320 e0e0      	LDI  R30,LOW(0)
000321 e0f0      	LDI  R31,HIGH(0)
000322 bdfb      	OUT  0x2A+1,R31
000323 bdea      	OUT  0x2A,R30
000324 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x2:
000325 e0f0      	LDI  R31,0
000326 0fee      	LSL  R30
000327 1fff      	ROL  R31
000328 0fea      	ADD  R30,R26
000329 1ffb      	ADC  R31,R27
00032a 940e 03e7 	CALL __GETW1PF
00032c 93fa      	ST   -Y,R31
00032d 93ea      	ST   -Y,R30
00032e 940e 008c 	CALL _calc_OCR
000330 bdfb      	OUT  0x2A+1,R31
000331 bdea      	OUT  0x2A,R30
                +
000332 ede8     +LDI R30 , LOW ( 2 * _0x0 + 0 )
000333 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + 0 )
                 	__POINTW1FN _0x0,0
000334 93fa      	ST   -Y,R31
000335 93ea      	ST   -Y,R30
000336 b5ea      	IN   R30,0x2A
000337 b5fb      	IN   R31,0x2A+1
000338 2766      	CLR  R22
000339 2777      	CLR  R23
00033a 940e 03eb 	CALL __PUTPARD1
00033c e084      	LDI  R24,4
00033d 940e 02e3 	CALL _printf
00033f 9626      	ADIW R28,6
000340 e2ec      	LDI  R30,LOW(300)
000341 e0f1      	LDI  R31,HIGH(300)
000342 cfd9      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x3:
000343 932a      	ST   -Y,R18
000344 85ef      	LDD  R30,Y+15
000345 89f8      	LDD  R31,Y+15+1
000346 93fa      	ST   -Y,R31
000347 93ea      	ST   -Y,R30
000348 01fe      	MOVW R30,R28
000349 963f      	ADIW R30,15
00034a 93fa      	ST   -Y,R31
00034b 93ea      	ST   -Y,R30
00034c 940c 0104 	JMP  __put_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x4:
00034e 2fa0      	MOV  R26,R16
00034f e0b0      	LDI  R27,0
000350 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000351 2fe2      	MOV  R30,R18
000352 e0f0      	LDI  R31,0
000353 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
000354 89e8      	LDD  R30,Y+16
000355 89f9      	LDD  R31,Y+16+1
000356 9734      	SBIW R30,4
000357 8be8      	STD  Y+16,R30
000358 8bf9      	STD  Y+16+1,R31
000359 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7:
00035a 85ef      	LDD  R30,Y+15
00035b 89f8      	LDD  R31,Y+15+1
00035c 93fa      	ST   -Y,R31
00035d 93ea      	ST   -Y,R30
00035e 01fe      	MOVW R30,R28
00035f 963f      	ADIW R30,15
000360 93fa      	ST   -Y,R31
000361 93ea      	ST   -Y,R30
000362 940c 0104 	JMP  __put_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
000364 89a8      	LDD  R26,Y+16
000365 89b9      	LDD  R27,Y+16+1
000366 9614      	ADIW R26,4
000367 940e 03e3 	CALL __GETW1P
000369 83ee      	STD  Y+6,R30
00036a 83ff      	STD  Y+6+1,R31
00036b 93fa      	ST   -Y,R31
00036c 93ea      	ST   -Y,R30
00036d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
00036e e0e4      	LDI  R30,LOW(4)
00036f e0f0      	LDI  R31,HIGH(4)
000370 23ea      	AND  R30,R26
000371 23fb      	AND  R31,R27
000372 9730      	SBIW R30,0
000373 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
000374 89a8      	LDD  R26,Y+16
000375 89b9      	LDD  R27,Y+16+1
000376 9614      	ADIW R26,4
000377 940e 03e3 	CALL __GETW1P
000379 87ea      	STD  Y+10,R30
00037a 87fb      	STD  Y+10+1,R31
00037b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
00037c efeb      	LDI  R30,LOW(65531)
00037d efff      	LDI  R31,HIGH(65531)
00037e 23ea      	AND  R30,R26
00037f 2f0e      	MOV  R16,R30
000380 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000381 2fe0      	MOV  R30,R16
000382 e0f0      	LDI  R31,0
000383 70e1      	ANDI R30,LOW(0x1)
000384 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000385 91e9      	ld   r30,y+
000386 91f9      	ld   r31,y+
000387 9630      	adiw r30,0
000388 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000389 ea80     +LDI R24 , LOW ( 0xFA0 )
00038a e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
00038b 9701     +SBIW R24 , 1
00038c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
00038d 95a8      	wdr
00038e 9731      	sbiw r30,1
00038f f7c9      	brne __delay_ms0
                 __delay_ms1:
000390 9508      	ret
                 
                 __ADDW2R15:
000391 2400      	CLR  R0
000392 0daf      	ADD  R26,R15
000393 1db0      	ADC  R27,R0
000394 9508      	RET
                 
                 __ANEGW1:
000395 95f1      	NEG  R31
000396 95e1      	NEG  R30
000397 40f0      	SBCI R31,0
000398 9508      	RET
                 
                 __ANEGD1:
000399 95f0      	COM  R31
00039a 9560      	COM  R22
00039b 9570      	COM  R23
00039c 95e1      	NEG  R30
00039d 4fff      	SBCI R31,-1
00039e 4f6f      	SBCI R22,-1
00039f 4f7f      	SBCI R23,-1
0003a0 9508      	RET
                 
                 __LSLD1:
0003a1 0fee      	LSL  R30
0003a2 1fff      	ROL  R31
0003a3 1f66      	ROL  R22
0003a4 1f77      	ROL  R23
0003a5 9508      	RET
                 
                 __DIVD21U:
0003a6 933f      	PUSH R19
0003a7 934f      	PUSH R20
0003a8 935f      	PUSH R21
0003a9 2400      	CLR  R0
0003aa 2411      	CLR  R1
0003ab 2744      	CLR  R20
0003ac 2755      	CLR  R21
0003ad e230      	LDI  R19,32
                 __DIVD21U1:
0003ae 0faa      	LSL  R26
0003af 1fbb      	ROL  R27
0003b0 1f88      	ROL  R24
0003b1 1f99      	ROL  R25
0003b2 1c00      	ROL  R0
0003b3 1c11      	ROL  R1
0003b4 1f44      	ROL  R20
0003b5 1f55      	ROL  R21
0003b6 1a0e      	SUB  R0,R30
0003b7 0a1f      	SBC  R1,R31
0003b8 0b46      	SBC  R20,R22
0003b9 0b57      	SBC  R21,R23
0003ba f428      	BRCC __DIVD21U2
0003bb 0e0e      	ADD  R0,R30
0003bc 1e1f      	ADC  R1,R31
0003bd 1f46      	ADC  R20,R22
0003be 1f57      	ADC  R21,R23
0003bf c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0003c0 60a1      	SBR  R26,1
                 __DIVD21U3:
0003c1 953a      	DEC  R19
0003c2 f759      	BRNE __DIVD21U1
0003c3 01fd      	MOVW R30,R26
0003c4 01bc      	MOVW R22,R24
0003c5 01d0      	MOVW R26,R0
0003c6 01ca      	MOVW R24,R20
0003c7 915f      	POP  R21
0003c8 914f      	POP  R20
0003c9 913f      	POP  R19
0003ca 9508      	RET
                 
                 __DIVD21:
0003cb d004      	RCALL __CHKSIGND
0003cc dfd9      	RCALL __DIVD21U
0003cd f40e      	BRTC __DIVD211
0003ce dfca      	RCALL __ANEGD1
                 __DIVD211:
0003cf 9508      	RET
                 
                 __CHKSIGND:
0003d0 94e8      	CLT
0003d1 ff77      	SBRS R23,7
0003d2 c002      	RJMP __CHKSD1
0003d3 dfc5      	RCALL __ANEGD1
0003d4 9468      	SET
                 __CHKSD1:
0003d5 ff97      	SBRS R25,7
0003d6 c00b      	RJMP __CHKSD2
0003d7 2400      	CLR  R0
0003d8 95a0      	COM  R26
0003d9 95b0      	COM  R27
0003da 9580      	COM  R24
0003db 9590      	COM  R25
0003dc 9611      	ADIW R26,1
0003dd 1d80      	ADC  R24,R0
0003de 1d90      	ADC  R25,R0
0003df f800      	BLD  R0,0
0003e0 9403      	INC  R0
0003e1 fa00      	BST  R0,0
                 __CHKSD2:
0003e2 9508      	RET
                 
                 __GETW1P:
0003e3 91ed      	LD   R30,X+
0003e4 91fc      	LD   R31,X
0003e5 9711      	SBIW R26,1
0003e6 9508      	RET
                 
                 __GETW1PF:
0003e7 9005      	LPM  R0,Z+
0003e8 91f4      	LPM  R31,Z
0003e9 2de0      	MOV  R30,R0
0003ea 9508      	RET
                 
                 __PUTPARD1:
0003eb 937a      	ST   -Y,R23
0003ec 936a      	ST   -Y,R22
0003ed 93fa      	ST   -Y,R31
0003ee 93ea      	ST   -Y,R30
0003ef 9508      	RET
                 
                 __SWAPW12:
0003f0 2e1b      	MOV  R1,R27
0003f1 2fbf      	MOV  R27,R31
0003f2 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0003f3 2e1a      	MOV  R1,R26
0003f4 2fae      	MOV  R26,R30
0003f5 2de1      	MOV  R30,R1
0003f6 9508      	RET
                 
                 __SAVELOCR6:
0003f7 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003f8 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003f9 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003fa 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003fb 931a      	ST   -Y,R17
0003fc 930a      	ST   -Y,R16
0003fd 9508      	RET
                 
                 __LOADLOCR6:
0003fe 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003ff 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000400 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000401 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000402 8119      	LDD  R17,Y+1
000403 8108      	LD   R16,Y
000404 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  18 r1 :   8 r2 :   0 r3 :   0 r4 :   0 r5 :   8 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  25 r17:  22 r18:  24 r19:  12 r20:  16 r21:  24 r22:  14 r23:  11 
r24:  14 r25:   7 r26:  92 r27:  37 r28:  14 r29:   1 r30: 249 r31: 112 
x  :  12 y  : 134 z  :   7 
Registers used: 23 out of 35 (65.7%)

ATmega32 instruction use summary:
adc   :   7 add   :   4 adiw  :  22 and   :  16 andi  :   1 asr   :   0 
bclr  :   0 bld   :   1 brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 
break :   0 breq  :  24 brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 
brie  :   0 brlo  :   7 brlt  :   0 brmi  :   0 brne  :  24 brpl  :   1 
brsh  :   4 brtc  :   1 brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 
bst   :   1 call  :  75 cbi   :   1 cbr   :   0 clc   :   0 clh   :   0 
cli   :   1 cln   :   0 clr   :  21 cls   :   0 clt   :   1 clv   :   0 
clz   :   0 com   :   7 cp    :   5 cpc   :  13 cpi   :  29 cpse  :   0 
dec   :   2 des   :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 
icall :   0 ijmp  :   0 in    :   2 inc   :   3 jmp   :  28 ld    :  15 
ldd   :  56 ldi   : 134 lds   :   0 lpm   :   8 lsl   :   3 lsr   :   0 
mov   :  34 movw  :  16 mul   :   0 muls  :   1 mulsu :   0 neg   :   3 
nop   :   0 or    :   6 ori   :   0 out   :  48 pop   :   4 push  :   4 
rcall :   6 ret   :  30 reti  :   0 rjmp  :  47 rol   :  11 ror   :   0 
sbc   :   5 sbci  :   4 sbi   :   0 sbic  :   2 sbis  :   1 sbiw  :  23 
sbr   :   1 sbrc  :   0 sbrs  :   2 sec   :   0 seh   :   0 sei   :   0 
sen   :   0 ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 
sleep :   0 spm   :   0 st    :  50 std   :  27 sts   :   0 sub   :   3 
subi  :  10 swap  :   0 tst   :   3 wdr   :   1 
Instructions used: 58 out of 112 (51.8%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00080a   1922    136   2058   32768   6.3%
[.dseg] 0x000060 0x000262      0      2      2    2048   0.1%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 1 warnings
